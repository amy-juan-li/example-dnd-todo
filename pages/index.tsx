import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'

import { DragDropContext, Draggable, Droppable, resetServerContext } from 'react-beautiful-dnd'

import InputField from '../components/inputfield'
import TodoApp from '../components/todoapp'
import Todos from '../components/todos'

import { Status, Todo, WeekDay } from '../models/todo'
import styles from '../styles/Home.module.css'


const Home: NextPage = () => {
  const [name, setName] = useState<string>('')
  const [todos, setTodos] = useState<Todo[]>([])
  const [completedTodos, setCompletedTodos] = useState<Todo[]>([])

  //  type Actions = 
  //    { type: 'add', payload: string }
  //  | { type: 'remove', payload: number }
  //  | { type: 'done', payload: number }
  //
  //  const TodoReducer = (state: Todo[], action: Actions) => {
  //    switch (action.type) {
  //      case 'add':
  //        return [
  //          ...state,
  //          {id: Date.now(), name: action.payload, isDone: false}
  //        ]
  //      case 'remove':
  //        return state.filter((item) => item.id !== action.payload)
  //      case 'done':
  //        return state.map((item) => item.id === action.payload ? {...item, isDone: !item.isDone} : item)
  //    }
  //  }
  //  const [state, dispatch] = useReducer(TodoReducer, [])
  //

  const addNewTodo = (e: React.FormEvent) => {
    console.log('add new ')
    console.log(e)
    e.preventDefault()
    if (name) {
      const newTodo = {
        id: Date.now(),
        name,
        doDay: WeekDay.Monday,
        status: Status.Backlog,
        isDone: false
      }
      setTodos([...todos, newTodo])
      setName('')
    }
  }

  const onDragEndHandler = (result: any) => {
    const { destination, source } = result
  }



  return (
    <DragDropContext onDragEnd={onDragEndHandler}>
      <div className={styles.container}>
        <Head>
          <title>Drag-Drop-Animated-Todo</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className='flex flex-col items-center  min-h-screen pt-10'>
          <h2 className='text-4xl font-bold'>Taskify</h2>
          <InputField
            name={name}
            setName={setName}
            addNewTodo={addNewTodo}
          />
          <Todos
            todos={todos}
            setTodos={setTodos}
            completedTodos={completedTodos}
            setCompletedTodos={setCompletedTodos}
          />
        </div>)
      </div>
    </DragDropContext>
  )
}

//export const getServerSideProps: GetServerSideProps = async ({ query }) => {
//  resetServerContext()
//  return {
//    props: {}
//  }
//}

export default Home
